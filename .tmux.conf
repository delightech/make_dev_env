# shellの指定
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}" # SHEHELL のタイプミスを修正

# --- Prefix Key ---
# prefixキーをC-gに変更する
set -g prefix C-g
# C-bのキーバインドを解除する
unbind C-b
# C-g*2でtmux内のプログラムにC-gを送る
bind C-g send-prefix

# --- General Settings ---
# キーストロークのディレイを減らす
set -sg escape-time 0

# ウィンドウのインデックスを1から始める
set -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 全てのベルを無視
set -g bell-action none

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# マウス操作を有効にする
set -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"
set -g terminal-overrides "xterm:colors=256"

# ウィンドウ履歴の最大行数
set-option -g history-limit 20000

# --- Pane Management ---
# | でペインを縦に分割する
bind | split-window -h
# - でペインを横に分割する
bind - split-window -v

# ペイン終了
bind q kill-pane
# ウィンドウ終了
bind Q kill-window

# Vimのカーソル移動と競合しないペイン移動
# Prefix + Shift + h/j/k/l でペインを移動
# 大文字の H/J/K/L に割り当てることで、Vimの小文字カーソル移動との競合を避ける
bind H select-pane -L
bind J select-pane -D
bind K select-pane -U
bind L select-pane -R

# Vimのカーソル移動と競合しないペインリサイズ
# Prefix + Shift + 矢印キー でペインをリサイズ
# 直感的な操作で、Vimのキーバインドと重ならない
bind -r S-Up resize-pane -U 5
bind -r S-Down resize-pane -D 5
bind -r S-Left resize-pane -L 5
bind -r S-Right resize-pane -R 5

# --- Window Management ---
# ウィンドウ移動のキーバインドを見直し
# C-n, C-p, C-c はVimと競合しやすいので、別のキーバインドを検討
# 例えば、Prefix + Shift + 左/右矢印 でウィンドウ移動など
# デフォルトの Prefix + 数字キー (C-g 1, C-g 2など) も有効です。
# 以下は、もし設定するなら競合しにくい例です。
# bind S-Left previous-window
# bind S-Right next-window
# bind C new-window # C-c は Vim での割り込みなどに使われるため、'C' 単体なども検討

# 元の設定をコメントアウトします（Vim との競合を避けるため）
# bind C-n next-window
# bind C-p previous-window
# bind C-c new-window
# bind C-j select-pane -D # 上記の H/J/K/L に変更したため重複回避
# bind C-k select-pane -U # 上記の H/J/K/L に変更したため重複回避
# bind C-h select-pane -L # 上記の H/J/K/L に変更したため重複回避
# bind C-l select-pane -R # 上記の H/J/K/L に変更したため重複回避

# --- Status Bar Appearance ---
# ステータスバーの色を設定する
set-option -g status-bg "colour29"
# status line の文字色を指定する。
set-option -g status-fg "colour255"

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=colour255] Window: #I#[fg=colour255] Pane: #P"
## 右パネルを設定する
set -g status-right "#[fg=colour255][%Y-%m-%d(%a) %H:%M] "
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# --- Copy Mode ---
# コピーモードを設定する
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi
# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection
# 'V' で行選択
bind -T copy-mode-vi V send -X select-line
# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle
# 'y' でヤンク (macOSなのでpbcopyでOK)
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line
# 'p'でペースト
bind p paste-buffer

# 前のウィンドウへ移動
bind p previous-window
